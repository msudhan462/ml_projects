{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1Vx-gKrmvUYhGhF9E0qkgAGHqesCO3ld9","authorship_tag":"ABX9TyPo9Ak4H7upvtAAJrZzSuf3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"tYGMTzdqMmEx","executionInfo":{"status":"ok","timestamp":1690162296399,"user_tz":-330,"elapsed":3749,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}}},"outputs":[],"source":["import tensorflow as tf"]},{"cell_type":"code","source":["shakespear_raw_text = tf.keras.utils.get_file(fname=\"shakespeare.txt\", origin=\"https://storage.googleapis.com/download.tensorflow.org/data/shakespeare.txt\")\n","shakespear_raw_text"],"metadata":{"id":"oAU9P_I4NHXC","executionInfo":{"status":"ok","timestamp":1690162296401,"user_tz":-330,"elapsed":33,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"colab":{"base_uri":"https://localhost:8080/","height":70},"outputId":"ffcdb72e-fba6-410c-ce32-cd4e418b4bcf"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/download.tensorflow.org/data/shakespeare.txt\n","1115394/1115394 [==============================] - 0s 0us/step\n"]},{"output_type":"execute_result","data":{"text/plain":["'/root/.keras/datasets/shakespeare.txt'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["text = open(shakespear_raw_text, \"rb\").read().decode(\"utf-8\")\n","text[:10]"],"metadata":{"id":"2SbOYOxLg3OV","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1690163139821,"user_tz":-330,"elapsed":5,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"outputId":"0e4ebd79-2962-4102-994e-580f8154c0ac"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'First Citi'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["total_chars = len(text)\n","total_chars"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7Xf7fiBAhlLO","executionInfo":{"status":"ok","timestamp":1690164676450,"user_tz":-330,"elapsed":631,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"outputId":"e3b381b0-2a0d-4914-d1b8-f6f7e48e1db6"},"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1115394"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["vocab = sorted(set(text))\n","print(f\"vocabs = {vocab}\")\n","\n","ids_from_chars = tf.keras.layers.StringLookup(max_tokens=None, vocabulary=vocab)\n","ids_from_chars(list(\"Somaripothu\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Dp2gq0HJovYi","executionInfo":{"status":"ok","timestamp":1690164677085,"user_tz":-330,"elapsed":14,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"outputId":"c7723e78-9d15-4784-9b3c-9bfecce30eb1"},"execution_count":69,"outputs":[{"output_type":"stream","name":"stdout","text":["vocabs = ['\\n', ' ', '!', '$', '&', \"'\", ',', '-', '.', '3', ':', ';', '?', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n"]},{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(11,), dtype=int64, numpy=array([32, 54, 52, 40, 57, 48, 55, 54, 59, 47, 60])>"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["chars_from_ids = tf.keras.layers.StringLookup(max_tokens=None, vocabulary=vocab,invert=True)"],"metadata":{"id":"lSKXqqcfuz9V","executionInfo":{"status":"ok","timestamp":1690165842811,"user_tz":-330,"elapsed":3,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}}},"execution_count":84,"outputs":[]},{"cell_type":"code","source":["chars_from_ids([19, 48, 57, 58, 59,  2, 16, 48, 59, 48, 65, 44, 53, 11,  1, 15, 44,\n","       45, 54, 57, 44,  2, 62, 44,  2, 55, 57, 54, 42, 44, 44, 43,  2, 40,\n","       53, 64,  2, 45, 60, 57, 59, 47, 44, 57,  7,  2, 47, 44, 40, 57,  2,\n","       52, 44,  2, 58, 55, 44, 40, 50,  9,  1,  1, 14, 51, 51, 11,  1, 32,\n","       55, 44, 40, 50,  7,  2, 58, 55, 44, 40, 50,  9,  1,  1, 19, 48, 57,\n","       58, 59,  2, 16, 48, 59, 48, 65, 44, 53, 11,  1, 38, 54, 60])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FhYSo0r6vChI","executionInfo":{"status":"ok","timestamp":1690165861185,"user_tz":-330,"elapsed":14,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"outputId":"78ee7d1f-c59c-4234-9a6e-18620beabacd"},"execution_count":85,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(100,), dtype=string, numpy=\n","array([b'F', b'i', b'r', b's', b't', b' ', b'C', b'i', b't', b'i', b'z',\n","       b'e', b'n', b':', b'\\n', b'B', b'e', b'f', b'o', b'r', b'e', b' ',\n","       b'w', b'e', b' ', b'p', b'r', b'o', b'c', b'e', b'e', b'd', b' ',\n","       b'a', b'n', b'y', b' ', b'f', b'u', b'r', b't', b'h', b'e', b'r',\n","       b',', b' ', b'h', b'e', b'a', b'r', b' ', b'm', b'e', b' ', b's',\n","       b'p', b'e', b'a', b'k', b'.', b'\\n', b'\\n', b'A', b'l', b'l', b':',\n","       b'\\n', b'S', b'p', b'e', b'a', b'k', b',', b' ', b's', b'p', b'e',\n","       b'a', b'k', b'.', b'\\n', b'\\n', b'F', b'i', b'r', b's', b't', b' ',\n","       b'C', b'i', b't', b'i', b'z', b'e', b'n', b':', b'\\n', b'Y', b'o',\n","       b'u'], dtype=object)>"]},"metadata":{},"execution_count":85}]},{"cell_type":"code","source":["all_ids = ids_from_chars(tf.strings.unicode_split(text,'UTF-8'))"],"metadata":{"id":"RJiY8iM_o-VX","executionInfo":{"status":"ok","timestamp":1690164677714,"user_tz":-330,"elapsed":632,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}}},"execution_count":70,"outputs":[]},{"cell_type":"code","source":["all_ids[:100]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F4szurYdphkS","executionInfo":{"status":"ok","timestamp":1690164677715,"user_tz":-330,"elapsed":18,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"outputId":"ec1ba021-af5c-4321-caf8-c68edbb3ef7f"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(100,), dtype=int64, numpy=\n","array([19, 48, 57, 58, 59,  2, 16, 48, 59, 48, 65, 44, 53, 11,  1, 15, 44,\n","       45, 54, 57, 44,  2, 62, 44,  2, 55, 57, 54, 42, 44, 44, 43,  2, 40,\n","       53, 64,  2, 45, 60, 57, 59, 47, 44, 57,  7,  2, 47, 44, 40, 57,  2,\n","       52, 44,  2, 58, 55, 44, 40, 50,  9,  1,  1, 14, 51, 51, 11,  1, 32,\n","       55, 44, 40, 50,  7,  2, 58, 55, 44, 40, 50,  9,  1,  1, 19, 48, 57,\n","       58, 59,  2, 16, 48, 59, 48, 65, 44, 53, 11,  1, 38, 54, 60])>"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["start = 0\n","end = 100\n","target_li = []\n","label_li = []\n","total_ids = len(all_ids)\n","while total_ids > 0:\n","    label = all_ids[start:end]\n","    target = all_ids[start+1:end+1]\n","    target_li.append(target)\n","    label_li.append(label)\n","    start = end\n","    end = end + 100\n","    total_ids -= 100\n","    if total_ids < 100:\n","        break"],"metadata":{"id":"aXM0bqcrh99s","executionInfo":{"status":"ok","timestamp":1690164684026,"user_tz":-330,"elapsed":6317,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}}},"execution_count":72,"outputs":[]},{"cell_type":"code","source":["len(target_li)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DETUdnqUi71a","executionInfo":{"status":"ok","timestamp":1690164684028,"user_tz":-330,"elapsed":39,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"outputId":"0f12637b-1d58-4b72-9567-8716eb946842"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["11153"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["dataset = tf.data.Dataset.from_tensor_slices((label_li, target_li))"],"metadata":{"id":"RLm_SgFIj_gl","executionInfo":{"status":"ok","timestamp":1690164691860,"user_tz":-330,"elapsed":2339,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}}},"execution_count":74,"outputs":[]},{"cell_type":"code","source":["for i in dataset.take(1):\n","    print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n6HH84APk64Q","executionInfo":{"status":"ok","timestamp":1690164708851,"user_tz":-330,"elapsed":16,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"outputId":"034aa449-3b4b-4cb2-f86d-dbeba0a7e0b8"},"execution_count":75,"outputs":[{"output_type":"stream","name":"stdout","text":["(<tf.Tensor: shape=(100,), dtype=int64, numpy=\n","array([19, 48, 57, 58, 59,  2, 16, 48, 59, 48, 65, 44, 53, 11,  1, 15, 44,\n","       45, 54, 57, 44,  2, 62, 44,  2, 55, 57, 54, 42, 44, 44, 43,  2, 40,\n","       53, 64,  2, 45, 60, 57, 59, 47, 44, 57,  7,  2, 47, 44, 40, 57,  2,\n","       52, 44,  2, 58, 55, 44, 40, 50,  9,  1,  1, 14, 51, 51, 11,  1, 32,\n","       55, 44, 40, 50,  7,  2, 58, 55, 44, 40, 50,  9,  1,  1, 19, 48, 57,\n","       58, 59,  2, 16, 48, 59, 48, 65, 44, 53, 11,  1, 38, 54, 60])>, <tf.Tensor: shape=(100,), dtype=int64, numpy=\n","array([48, 57, 58, 59,  2, 16, 48, 59, 48, 65, 44, 53, 11,  1, 15, 44, 45,\n","       54, 57, 44,  2, 62, 44,  2, 55, 57, 54, 42, 44, 44, 43,  2, 40, 53,\n","       64,  2, 45, 60, 57, 59, 47, 44, 57,  7,  2, 47, 44, 40, 57,  2, 52,\n","       44,  2, 58, 55, 44, 40, 50,  9,  1,  1, 14, 51, 51, 11,  1, 32, 55,\n","       44, 40, 50,  7,  2, 58, 55, 44, 40, 50,  9,  1,  1, 19, 48, 57, 58,\n","       59,  2, 16, 48, 59, 48, 65, 44, 53, 11,  1, 38, 54, 60,  2])>)\n"]}]},{"cell_type":"code","source":["buffer_size = 462\n","batch_size = 100\n","\n","\n","dataset = dataset.shuffle(buffer_size).batch(batch_size, drop_remainder=True).prefetch(tf.data.experimental.AUTOTUNE)"],"metadata":{"id":"0W2MnNKplCJM","executionInfo":{"status":"ok","timestamp":1690164850357,"user_tz":-330,"elapsed":4,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}}},"execution_count":77,"outputs":[]},{"cell_type":"code","source":["for i in dataset.take(1):\n","    print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9jLsxVqmmZRd","executionInfo":{"status":"ok","timestamp":1690164862754,"user_tz":-330,"elapsed":9,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"outputId":"4943ebb4-4131-4405-fcfd-eb67ff021ef9"},"execution_count":78,"outputs":[{"output_type":"stream","name":"stdout","text":["(<tf.Tensor: shape=(100, 100), dtype=int64, numpy=\n","array([[53,  7,  2, ..., 48, 58, 59],\n","       [59, 47, 44, ...,  2, 64, 54],\n","       [ 2, 40, 52, ..., 40, 64, 48],\n","       ...,\n","       [53, 54, 62, ..., 51, 51,  2],\n","       [58, 44,  2, ..., 48, 51,  6],\n","       [60,  7,  2, ..., 44, 53, 44]])>, <tf.Tensor: shape=(100, 100), dtype=int64, numpy=\n","array([[ 7,  2, 58, ..., 58, 59, 57],\n","       [47, 44,  2, ..., 64, 54, 60],\n","       [40, 52,  2, ..., 64, 48, 53],\n","       ...,\n","       [54, 62,  2, ..., 51,  2, 64],\n","       [44,  2, 53, ..., 51,  6, 43],\n","       [ 7,  2, 40, ..., 53, 44, 52]])>)\n"]}]},{"cell_type":"code","source":["# model\n","\n","vocab_size = len(ids_from_chars.get_vocabulary())\n","print(vocab_size)\n","class CharacterPrediction(tf.keras.Model):\n","\n","    def __init__(self, **kwargs):\n","        super().__init__(self)\n","        self.embedding_layer = tf.keras.layers.Embedding(input_dim=vocab_size, output_dim=64)\n","        self.rnn = tf.keras.layers.GRU(units=1024, return_state=True, return_sequences=True)\n","        self.dense = tf.keras.layers.Dense(vocab_size)\n","\n","    def call(self, inputs, states=None, return_states=False, training=False):\n","        x = self.embedding_layer(inputs, training=training)\n","        # print(x)\n","        if states == None:\n","            states = self.rnn.get_initial_state(x)\n","        x, states = self.rnn(x, initial_state=states, training=training)\n","        x = self.dense(x, training=training)\n","        if return_states:\n","            return x, states\n","        else:\n","            return x\n","model = CharacterPrediction()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iB-f-tmUmdJN","executionInfo":{"status":"ok","timestamp":1690167285237,"user_tz":-330,"elapsed":483,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"outputId":"ef638e09-577e-4528-ef38-1262eab5f079"},"execution_count":98,"outputs":[{"output_type":"stream","name":"stdout","text":["66\n"]}]},{"cell_type":"code","source":["for input_example_batch, target_example_batch in dataset.take(1):\n","    print(input_example_batch)\n","    # model.embedding_layer(input_example_batch)\n","\n","    example_batch_predictions = model(input_example_batch)\n","    print(example_batch_predictions.shape, \"# (batch_size, sequence_length, vocab_size)\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KGB8Z00EoUIt","executionInfo":{"status":"ok","timestamp":1690167290908,"user_tz":-330,"elapsed":5265,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"outputId":"5ba3a8da-e9ec-4929-ba09-5f063d76655d"},"execution_count":99,"outputs":[{"output_type":"stream","name":"stdout","text":["tf.Tensor(\n","[[53 54 60 ... 59 47 54]\n"," [62 54 60 ... 53 54 53]\n"," [44 43  7 ... 44 13  1]\n"," ...\n"," [43 54  2 ... 41 44  2]\n"," [44  2 59 ... 64 54 60]\n"," [51  1 21 ... 62  1 33]], shape=(100, 100), dtype=int64)\n","(100, 100, 66) # (batch_size, sequence_length, vocab_size)\n"]}]},{"cell_type":"code","source":["print(example_batch_predictions[0])\n","print(example_batch_predictions[0].shape)\n","sample_op = tf.random.categorical(example_batch_predictions[0], num_samples=1)\n","print(sample_op)\n","sampled_indices = tf.squeeze(sample_op, axis=-1).numpy()\n","print(sampled_indices)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9khm7-c2vQGY","executionInfo":{"status":"ok","timestamp":1690167514027,"user_tz":-330,"elapsed":12,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"outputId":"c62f16aa-83b8-491c-d553-32635267f5af"},"execution_count":106,"outputs":[{"output_type":"stream","name":"stdout","text":["tf.Tensor(\n","[[ 1.3454694e-03 -3.4555793e-03 -1.6289115e-03 ...  1.6095876e-03\n","   2.4572248e-05 -6.3932813e-03]\n"," [-1.4817520e-03 -2.9874691e-03 -3.7833706e-03 ...  2.1965143e-03\n","   6.5461090e-03 -6.3601322e-03]\n"," [-3.7194993e-03 -3.1427639e-03 -1.3299519e-02 ... -5.2913004e-03\n","   5.9990901e-03 -4.0239068e-03]\n"," ...\n"," [ 3.8408814e-04  8.4789451e-03  1.0979326e-02 ...  2.6583611e-03\n","  -3.3148711e-03  5.0217835e-03]\n"," [-4.9420344e-03  2.8174701e-03  6.8020895e-03 ... -1.7342316e-03\n","  -2.6019493e-03  1.5380967e-03]\n"," [-5.7958444e-03  9.0262154e-05  2.4546725e-03 ... -4.8511988e-04\n","   5.0137006e-03 -3.0040056e-03]], shape=(100, 66), dtype=float32)\n","(100, 66)\n","tf.Tensor(\n","[[11]\n"," [23]\n"," [40]\n"," [63]\n"," [63]\n"," [ 7]\n"," [ 7]\n"," [20]\n"," [37]\n"," [23]\n"," [25]\n"," [28]\n"," [58]\n"," [41]\n"," [40]\n"," [51]\n"," [56]\n"," [24]\n"," [23]\n"," [14]\n"," [31]\n"," [20]\n"," [19]\n"," [55]\n"," [18]\n"," [ 5]\n"," [20]\n"," [ 8]\n"," [47]\n"," [51]\n"," [ 2]\n"," [10]\n"," [26]\n"," [61]\n"," [ 2]\n"," [65]\n"," [21]\n"," [11]\n"," [27]\n"," [44]\n"," [38]\n"," [64]\n"," [22]\n"," [10]\n"," [10]\n"," [59]\n"," [43]\n"," [21]\n"," [35]\n"," [57]\n"," [23]\n"," [15]\n"," [12]\n"," [49]\n"," [41]\n"," [ 2]\n"," [42]\n"," [20]\n"," [64]\n"," [46]\n"," [26]\n"," [64]\n"," [54]\n"," [46]\n"," [18]\n"," [16]\n"," [23]\n"," [13]\n"," [12]\n"," [ 5]\n"," [44]\n"," [11]\n"," [48]\n"," [15]\n"," [38]\n"," [11]\n"," [ 1]\n"," [ 1]\n"," [38]\n"," [ 0]\n"," [37]\n"," [34]\n"," [55]\n"," [45]\n"," [26]\n"," [45]\n"," [15]\n"," [24]\n"," [53]\n"," [34]\n"," [34]\n"," [11]\n"," [16]\n"," [42]\n"," [12]\n"," [63]\n"," [59]\n"," [54]\n"," [25]\n"," [11]], shape=(100, 1), dtype=int64)\n","[11 23 40 63 63  7  7 20 37 23 25 28 58 41 40 51 56 24 23 14 31 20 19 55\n"," 18  5 20  8 47 51  2 10 26 61  2 65 21 11 27 44 38 64 22 10 10 59 43 21\n"," 35 57 23 15 12 49 41  2 42 20 64 46 26 64 54 46 18 16 23 13 12  5 44 11\n"," 48 15 38 11  1  1 38  0 37 34 55 45 26 45 15 24 53 34 34 11 16 42 12 63\n"," 59 54 25 11]\n"]}]},{"cell_type":"code","source":["print(tf.strings.join(chars_from_ids(sampled_indices)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BU8DIO7n0uAx","executionInfo":{"status":"ok","timestamp":1690167472832,"user_tz":-330,"elapsed":660,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"outputId":"cf34a51f-b9f5-4bd2-948e-cb93930da17d"},"execution_count":104,"outputs":[{"output_type":"stream","name":"stdout","text":["tf.Tensor(b\"ryAJwB;AsGDEX\\n:TAQvH.aZDb\\nn\\n?LARID&oR$gkZuqo'KF3AnxCGy[UNK]SbuSncKKwx:sF.LRsmupvh3B;YSNEKLGk&t3!XTlgL:SP\", shape=(), dtype=string)\n"]}]},{"cell_type":"code","source":["# loss function\n","loss = tf.losses.SparseCategoricalCrossentropy(from_logits=True)"],"metadata":{"id":"wbN5V97h1LPR","executionInfo":{"status":"ok","timestamp":1690167781057,"user_tz":-330,"elapsed":3,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}}},"execution_count":107,"outputs":[]},{"cell_type":"code","source":["example_batch_mean_loss = loss(target_example_batch, example_batch_predictions)\n","print(\"Prediction shape: \", example_batch_predictions.shape, \" # (batch_size, sequence_length, vocab_size)\")\n","print(\"Mean loss:        \", tf.exp(example_batch_mean_loss).numpy())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zevZdobg2aKe","executionInfo":{"status":"ok","timestamp":1690167890428,"user_tz":-330,"elapsed":498,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"outputId":"ca91cc8e-594d-4e7a-d890-b02365f34f5e"},"execution_count":110,"outputs":[{"output_type":"stream","name":"stdout","text":["Prediction shape:  (100, 100, 66)  # (batch_size, sequence_length, vocab_size)\n","Mean loss:         65.98795\n"]}]},{"cell_type":"code","source":["# optimizer\n","model.compile(optimizer='adam', loss=loss)"],"metadata":{"id":"YEVSuRqA2nk8","executionInfo":{"status":"ok","timestamp":1690167914950,"user_tz":-330,"elapsed":545,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}}},"execution_count":111,"outputs":[]},{"cell_type":"code","source":["import os\n","# Directory where the checkpoints will be saved\n","checkpoint_dir = './training_checkpoints'\n","# Name of the checkpoint files\n","checkpoint_prefix = os.path.join(checkpoint_dir, \"ckpt_{epoch}\")\n","\n","checkpoint_callback = tf.keras.callbacks.ModelCheckpoint(\n","    filepath=checkpoint_prefix,\n","    save_weights_only=True)"],"metadata":{"id":"Ih9UsF5B26xp","executionInfo":{"status":"ok","timestamp":1690167931895,"user_tz":-330,"elapsed":3,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}}},"execution_count":112,"outputs":[]},{"cell_type":"code","source":["EPOCHS = 4\n","history = model.fit(dataset, epochs=EPOCHS, callbacks=[checkpoint_callback])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Uob3J5--2-_Y","executionInfo":{"status":"ok","timestamp":1690171045397,"user_tz":-330,"elapsed":2967983,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"outputId":"9e2ac1f2-9321-4a89-8fec-11a7fe8f074f"},"execution_count":114,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/4\n","111/111 [==============================] - 723s 7s/step - loss: 2.9857\n","Epoch 2/4\n","111/111 [==============================] - 715s 6s/step - loss: 2.3259\n","Epoch 3/4\n","111/111 [==============================] - 713s 6s/step - loss: 2.1278\n","Epoch 4/4\n","111/111 [==============================] - 724s 7s/step - loss: 1.9554\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"yehKt3TTDGyK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.save(\"/content/drive/MyDrive/save-models/char_model\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n1jsrJX83E0E","executionInfo":{"status":"ok","timestamp":1690171239926,"user_tz":-330,"elapsed":9010,"user":{"displayName":"Madhusudhana","userId":"07612415316378441544"}},"outputId":"99a8996e-fed6-4112-9436-ba47d2a74b9e"},"execution_count":116,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:absl:Found untraced functions such as _update_step_xla, gru_cell_4_layer_call_fn, gru_cell_4_layer_call_and_return_conditional_losses while saving (showing 3 of 3). These functions will not be directly callable after loading.\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"VCHJTQplDWzI"},"execution_count":null,"outputs":[]}]}