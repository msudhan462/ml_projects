{"cells":[{"cell_type":"code","execution_count":2,"metadata":{"executionInfo":{"elapsed":3022,"status":"ok","timestamp":1679964925900,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"VLTKfBgR6CpU"},"outputs":[],"source":["import tensorflow as tf\n","import pandas as pd"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"elapsed":444,"status":"ok","timestamp":1679965024836,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"0SIuBh0D61kT","outputId":"40c08ee5-5fdc-4063-a92c-be9aadb18d3b"},"outputs":[{"data":{"text/html":["\n","  \u003cdiv id=\"df-e25fb045-f0fe-461a-8bb2-3286d6aecada\"\u003e\n","    \u003cdiv class=\"colab-df-container\"\u003e\n","      \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003e2401\u003c/th\u003e\n","      \u003cth\u003eBorderlands\u003c/th\u003e\n","      \u003cth\u003ePositive\u003c/th\u003e\n","      \u003cth\u003eim getting on borderlands and i will murder you all ,\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e2401\u003c/td\u003e\n","      \u003ctd\u003eBorderlands\u003c/td\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eI am coming to the borders and I will kill you...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e2401\u003c/td\u003e\n","      \u003ctd\u003eBorderlands\u003c/td\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eim getting on borderlands and i will kill you ...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003e2401\u003c/td\u003e\n","      \u003ctd\u003eBorderlands\u003c/td\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eim coming on borderlands and i will murder you...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003e2401\u003c/td\u003e\n","      \u003ctd\u003eBorderlands\u003c/td\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eim getting on borderlands 2 and i will murder ...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e2401\u003c/td\u003e\n","      \u003ctd\u003eBorderlands\u003c/td\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eim getting into borderlands and i can murder y...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e...\u003c/th\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e15831\u003c/th\u003e\n","      \u003ctd\u003e3108\u003c/td\u003e\n","      \u003ctd\u003eDota2\u003c/td\u003e\n","      \u003ctd\u003eNegative\u003c/td\u003e\n","      \u003ctd\u003eShe wtf\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e15832\u003c/th\u003e\n","      \u003ctd\u003e3108\u003c/td\u003e\n","      \u003ctd\u003eDota2\u003c/td\u003e\n","      \u003ctd\u003eNegative\u003c/td\u003e\n","      \u003ctd\u003ewtf\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e15833\u003c/th\u003e\n","      \u003ctd\u003e3109\u003c/td\u003e\n","      \u003ctd\u003eDota2\u003c/td\u003e\n","      \u003ctd\u003eIrrelevant\u003c/td\u003e\n","      \u003ctd\u003eICYMI: @BLASTDota finds sponsor in @KITKAT. . ...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e15834\u003c/th\u003e\n","      \u003ctd\u003e3109\u003c/td\u003e\n","      \u003ctd\u003eDota2\u003c/td\u003e\n","      \u003ctd\u003eIrrelevant\u003c/td\u003e\n","      \u003ctd\u003eICYMI: @ BLASTDota finds sponsor in @ KITKAT. ...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e15835\u003c/th\u003e\n","      \u003ctd\u003e3109\u003c/td\u003e\n","      \u003ctd\u003eDota2\u003c/td\u003e\n","      \u003ctd\u003eIrrelevant\u003c/td\u003e\n","      \u003ctd\u003eICYMI: @ BLASTDota finds a sponsor in @ KITKAT...\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003cp\u003e15836 rows Ã— 4 columns\u003c/p\u003e\n","\u003c/div\u003e\n","      \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e25fb045-f0fe-461a-8bb2-3286d6aecada')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\"\u003e\n","        \n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M0 0h24v24H0V0z\" fill=\"none\"/\u003e\n","    \u003cpath d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/\u003e\u003cpath d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/\u003e\n","  \u003c/svg\u003e\n","      \u003c/button\u003e\n","      \n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","      \u003cscript\u003e\n","        const buttonEl =\n","          document.querySelector('#df-e25fb045-f0fe-461a-8bb2-3286d6aecada button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e25fb045-f0fe-461a-8bb2-3286d6aecada');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      \u003c/script\u003e\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n","  "],"text/plain":["       2401  Borderlands    Positive  \\\n","0      2401  Borderlands    Positive   \n","1      2401  Borderlands    Positive   \n","2      2401  Borderlands    Positive   \n","3      2401  Borderlands    Positive   \n","4      2401  Borderlands    Positive   \n","...     ...          ...         ...   \n","15831  3108        Dota2    Negative   \n","15832  3108        Dota2    Negative   \n","15833  3109        Dota2  Irrelevant   \n","15834  3109        Dota2  Irrelevant   \n","15835  3109        Dota2  Irrelevant   \n","\n","      im getting on borderlands and i will murder you all ,  \n","0      I am coming to the borders and I will kill you...     \n","1      im getting on borderlands and i will kill you ...     \n","2      im coming on borderlands and i will murder you...     \n","3      im getting on borderlands 2 and i will murder ...     \n","4      im getting into borderlands and i can murder y...     \n","...                                                  ...     \n","15831                                            She wtf     \n","15832                                                wtf     \n","15833  ICYMI: @BLASTDota finds sponsor in @KITKAT. . ...     \n","15834  ICYMI: @ BLASTDota finds sponsor in @ KITKAT. ...     \n","15835  ICYMI: @ BLASTDota finds a sponsor in @ KITKAT...     \n","\n","[15836 rows x 4 columns]"]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["df = pd.read_csv(\"twitter_training.csv\")\n","df"]},{"cell_type":"code","execution_count":5,"metadata":{"executionInfo":{"elapsed":1014,"status":"ok","timestamp":1679965034551,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"xkkHR0FW7Eod"},"outputs":[],"source":["df.columns = [\"ID\", \"Borderlands\",\"Status\", \"Review\"]"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"elapsed":1210,"status":"ok","timestamp":1679965038702,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"5UysANYQ7ImG","outputId":"045106fa-884b-419f-c13e-4e81268f8bc4"},"outputs":[{"data":{"text/html":["\n","  \u003cdiv id=\"df-992457dc-ded3-4c37-b520-5835de2dd36b\"\u003e\n","    \u003cdiv class=\"colab-df-container\"\u003e\n","      \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003eID\u003c/th\u003e\n","      \u003cth\u003eBorderlands\u003c/th\u003e\n","      \u003cth\u003eStatus\u003c/th\u003e\n","      \u003cth\u003eReview\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e2401\u003c/td\u003e\n","      \u003ctd\u003eBorderlands\u003c/td\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eI am coming to the borders and I will kill you...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e2401\u003c/td\u003e\n","      \u003ctd\u003eBorderlands\u003c/td\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eim getting on borderlands and i will kill you ...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003e2401\u003c/td\u003e\n","      \u003ctd\u003eBorderlands\u003c/td\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eim coming on borderlands and i will murder you...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003e2401\u003c/td\u003e\n","      \u003ctd\u003eBorderlands\u003c/td\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eim getting on borderlands 2 and i will murder ...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e2401\u003c/td\u003e\n","      \u003ctd\u003eBorderlands\u003c/td\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eim getting into borderlands and i can murder y...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e...\u003c/th\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e15831\u003c/th\u003e\n","      \u003ctd\u003e3108\u003c/td\u003e\n","      \u003ctd\u003eDota2\u003c/td\u003e\n","      \u003ctd\u003eNegative\u003c/td\u003e\n","      \u003ctd\u003eShe wtf\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e15832\u003c/th\u003e\n","      \u003ctd\u003e3108\u003c/td\u003e\n","      \u003ctd\u003eDota2\u003c/td\u003e\n","      \u003ctd\u003eNegative\u003c/td\u003e\n","      \u003ctd\u003ewtf\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e15833\u003c/th\u003e\n","      \u003ctd\u003e3109\u003c/td\u003e\n","      \u003ctd\u003eDota2\u003c/td\u003e\n","      \u003ctd\u003eIrrelevant\u003c/td\u003e\n","      \u003ctd\u003eICYMI: @BLASTDota finds sponsor in @KITKAT. . ...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e15834\u003c/th\u003e\n","      \u003ctd\u003e3109\u003c/td\u003e\n","      \u003ctd\u003eDota2\u003c/td\u003e\n","      \u003ctd\u003eIrrelevant\u003c/td\u003e\n","      \u003ctd\u003eICYMI: @ BLASTDota finds sponsor in @ KITKAT. ...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e15835\u003c/th\u003e\n","      \u003ctd\u003e3109\u003c/td\u003e\n","      \u003ctd\u003eDota2\u003c/td\u003e\n","      \u003ctd\u003eIrrelevant\u003c/td\u003e\n","      \u003ctd\u003eICYMI: @ BLASTDota finds a sponsor in @ KITKAT...\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003cp\u003e15836 rows Ã— 4 columns\u003c/p\u003e\n","\u003c/div\u003e\n","      \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-992457dc-ded3-4c37-b520-5835de2dd36b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\"\u003e\n","        \n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M0 0h24v24H0V0z\" fill=\"none\"/\u003e\n","    \u003cpath d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/\u003e\u003cpath d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/\u003e\n","  \u003c/svg\u003e\n","      \u003c/button\u003e\n","      \n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","      \u003cscript\u003e\n","        const buttonEl =\n","          document.querySelector('#df-992457dc-ded3-4c37-b520-5835de2dd36b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-992457dc-ded3-4c37-b520-5835de2dd36b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      \u003c/script\u003e\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n","  "],"text/plain":["         ID  Borderlands      Status  \\\n","0      2401  Borderlands    Positive   \n","1      2401  Borderlands    Positive   \n","2      2401  Borderlands    Positive   \n","3      2401  Borderlands    Positive   \n","4      2401  Borderlands    Positive   \n","...     ...          ...         ...   \n","15831  3108        Dota2    Negative   \n","15832  3108        Dota2    Negative   \n","15833  3109        Dota2  Irrelevant   \n","15834  3109        Dota2  Irrelevant   \n","15835  3109        Dota2  Irrelevant   \n","\n","                                                  Review  \n","0      I am coming to the borders and I will kill you...  \n","1      im getting on borderlands and i will kill you ...  \n","2      im coming on borderlands and i will murder you...  \n","3      im getting on borderlands 2 and i will murder ...  \n","4      im getting into borderlands and i can murder y...  \n","...                                                  ...  \n","15831                                            She wtf  \n","15832                                                wtf  \n","15833  ICYMI: @BLASTDota finds sponsor in @KITKAT. . ...  \n","15834  ICYMI: @ BLASTDota finds sponsor in @ KITKAT. ...  \n","15835  ICYMI: @ BLASTDota finds a sponsor in @ KITKAT...  \n","\n","[15836 rows x 4 columns]"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["df"]},{"cell_type":"code","execution_count":7,"metadata":{"executionInfo":{"elapsed":373,"status":"ok","timestamp":1679965047809,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"9ep10SIO71ET"},"outputs":[],"source":["data_df = df[['Status', 'Review']]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1679282505519,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"y5Ic9goh79Bd","outputId":"ed3c0664-c73d-477c-ede7-2523664946da"},"outputs":[{"data":{"text/html":["\n","  \u003cdiv id=\"df-4a535428-5596-4c91-b881-4bda5d931fcc\"\u003e\n","    \u003cdiv class=\"colab-df-container\"\u003e\n","      \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003eStatus\u003c/th\u003e\n","      \u003cth\u003eReview\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eI am coming to the borders and I will kill you...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eim getting on borderlands and i will kill you ...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eim coming on borderlands and i will murder you...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eim getting on borderlands 2 and i will murder ...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eim getting into borderlands and i can murder y...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e...\u003c/th\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e74676\u003c/th\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eJust realized that the Windows partition of my...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e74677\u003c/th\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eJust realized that my Mac window partition is ...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e74678\u003c/th\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eJust realized the windows partition of my Mac ...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e74679\u003c/th\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eJust realized between the windows partition of...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e74680\u003c/th\u003e\n","      \u003ctd\u003ePositive\u003c/td\u003e\n","      \u003ctd\u003eJust like the windows partition of my Mac is l...\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003cp\u003e74681 rows Ã— 2 columns\u003c/p\u003e\n","\u003c/div\u003e\n","      \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4a535428-5596-4c91-b881-4bda5d931fcc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\"\u003e\n","        \n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M0 0h24v24H0V0z\" fill=\"none\"/\u003e\n","    \u003cpath d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/\u003e\u003cpath d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/\u003e\n","  \u003c/svg\u003e\n","      \u003c/button\u003e\n","      \n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","      \u003cscript\u003e\n","        const buttonEl =\n","          document.querySelector('#df-4a535428-5596-4c91-b881-4bda5d931fcc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4a535428-5596-4c91-b881-4bda5d931fcc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      \u003c/script\u003e\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n","  "],"text/plain":["         Status                                             Review\n","0      Positive  I am coming to the borders and I will kill you...\n","1      Positive  im getting on borderlands and i will kill you ...\n","2      Positive  im coming on borderlands and i will murder you...\n","3      Positive  im getting on borderlands 2 and i will murder ...\n","4      Positive  im getting into borderlands and i can murder y...\n","...         ...                                                ...\n","74676  Positive  Just realized that the Windows partition of my...\n","74677  Positive  Just realized that my Mac window partition is ...\n","74678  Positive  Just realized the windows partition of my Mac ...\n","74679  Positive  Just realized between the windows partition of...\n","74680  Positive  Just like the windows partition of my Mac is l...\n","\n","[74681 rows x 2 columns]"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["data_df"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":516,"status":"ok","timestamp":1679965056923,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"n_oh054f7-AV","outputId":"33081962-7a20-42e3-cfda-481da0c43f0c"},"outputs":[{"name":"stdout","output_type":"stream","text":["\u003cclass 'pandas.core.frame.DataFrame'\u003e\n","RangeIndex: 15836 entries, 0 to 15835\n","Data columns (total 2 columns):\n"," #   Column  Non-Null Count  Dtype \n","---  ------  --------------  ----- \n"," 0   Status  15836 non-null  object\n"," 1   Review  15675 non-null  object\n","dtypes: object(2)\n","memory usage: 247.6+ KB\n"]}],"source":["data_df.info()"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1679965057331,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"-BzxCjV88FOH","outputId":"c26525ad-aa18-472d-bd09-4222c54a94ef"},"outputs":[{"name":"stdout","output_type":"stream","text":["Status\n","False    15836\n","Name: Status, dtype: int64\n","\n","Review\n","False    15675\n","True       161\n","Name: Review, dtype: int64\n","\n"]}],"source":["for column in data_df.columns:\n","    print(column)\n","    print(data_df[column].isnull().value_counts())\n","    print()"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1679965060976,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"wdd5wXRA8RIz","outputId":"27e2fe15-f4fb-46c2-8809-ea205c3c3ef5"},"outputs":[{"name":"stderr","output_type":"stream","text":["\u003cipython-input-10-c9868f817067\u003e:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data_df.dropna(axis=0,inplace=True)\n"]}],"source":["data_df.dropna(axis=0,inplace=True)"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":389,"status":"ok","timestamp":1679965064944,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"LI97SUph9Goo","outputId":"5e79996c-549b-4bee-a492-8d39e44dea4f"},"outputs":[{"name":"stdout","output_type":"stream","text":["Status\n","False    15675\n","Name: Status, dtype: int64\n","\n","Review\n","False    15675\n","Name: Review, dtype: int64\n","\n"]}],"source":["for column in data_df.columns:\n","    print(column)\n","    print(data_df[column].isnull().value_counts())\n","    print()"]},{"cell_type":"code","execution_count":17,"metadata":{"executionInfo":{"elapsed":2,"status":"ok","timestamp":1679965107056,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"H8sFo2qN9Izt"},"outputs":[],"source":["vector_layer = tf.keras.layers.TextVectorization()"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":575,"status":"ok","timestamp":1679965097652,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"LLuv00DTBOV3","outputId":"2988f22a-1c09-45e0-d15f-bc4341695369"},"outputs":[{"name":"stderr","output_type":"stream","text":["\u003cipython-input-15-169e7b68a8b0\u003e:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data_df['Status'] = data_df['Status'].apply(lambda x: 3 if x == \"Neutral\" else 1 if x == \"Positive\" else 2)\n"]}],"source":["data_df['Status'] = data_df['Status'].apply(lambda x: 3 if x == \"Neutral\" else 1 if x == \"Positive\" else 2)"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1679965374850,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"fUkHUN4sBc83","outputId":"ead9b30b-7910-455b-b252-1f2c4c856a8d"},"outputs":[{"data":{"text/plain":["array([1, 3, 2])"]},"execution_count":25,"metadata":{},"output_type":"execute_result"}],"source":["data_df['Status'].unique()"]},{"cell_type":"code","execution_count":19,"metadata":{"executionInfo":{"elapsed":2432,"status":"ok","timestamp":1679965126962,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"RduRrHDj9dxl"},"outputs":[],"source":["ds_vl = vector_layer.adapt(data_df['Review'])"]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1679965126963,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"MSbNFrj--JGK","outputId":"4b2cde0a-b51d-417f-8bd6-1b1339ff466e"},"outputs":[{"data":{"text/plain":["False"]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["\"Madhu\" in vector_layer.get_vocabulary()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8AIHo7gGBCWw"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":21,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1679965132713,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"nZlvQfbq_ZVh","outputId":"b0811b2e-ed17-4948-984f-e97bccbf33e5"},"outputs":[{"data":{"text/plain":["\u003ctf.Tensor: shape=(2,), dtype=int64, numpy=array([717,   1])\u003e"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["vector_layer(\"hello Madhu\")"]},{"cell_type":"code","execution_count":22,"metadata":{"executionInfo":{"elapsed":413,"status":"ok","timestamp":1679965262204,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"O-dn5jlDut_x"},"outputs":[],"source":["ds_tensors = tf.data.Dataset.from_tensor_slices((data_df['Review'], data_df['Status']))"]},{"cell_type":"code","execution_count":24,"metadata":{"executionInfo":{"elapsed":413,"status":"ok","timestamp":1679965341975,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"424o_aiLu7Xw"},"outputs":[],"source":["ds_batched = ds_tensors.shuffle(1000).batch(32)"]},{"cell_type":"code","execution_count":47,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1679966329814,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"HcvENWbewNqc"},"outputs":[{"ename":"AttributeError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-48-2e1882e62242\u003e\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mds_batched\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtake\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----\u003e 2\u001b[0;31m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'tuple' object has no attribute 'shape'"]}],"source":["for batch, labels in ds_batched.take(1):\n","    print(batch.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1679282512123,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"N2B6pPar_oPA","outputId":"0c0f3752-850d-4574-b7a6-2d356abd1bf7"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'n2k'"]},"execution_count":18,"metadata":{},"output_type":"execute_result"}],"source":["vector_layer.get_vocabulary()[645]"]},{"cell_type":"code","execution_count":27,"metadata":{"executionInfo":{"elapsed":1,"status":"ok","timestamp":1679965411029,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"gnsLQJjIAU8s"},"outputs":[],"source":["total_unq_words = len(vector_layer.get_vocabulary())"]},{"cell_type":"code","execution_count":43,"metadata":{"executionInfo":{"elapsed":705,"status":"ok","timestamp":1679966281173,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"txxdcR3L_uAb"},"outputs":[],"source":["model = tf.keras.Sequential([\n","    tf.keras.Input(shape=(32,)),\n","    tf.keras.layers.Embedding(total_unq_words, 64),\n","    tf.keras.layers.LSTM(20, return_sequences=True),\n","    tf.keras.layers.LSTM(20, return_sequences=True),\n","    tf.keras.layers.Dense(3, activation=\"softmax\")\n","    ])"]},{"cell_type":"code","execution_count":44,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":121},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1679966284194,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"4-mXiBYSCNoN","outputId":"dfccfdaf-14d8-4d18-d15c-45274253cf3e"},"outputs":[{"data":{"image/png":"\n","text/plain":["\u003cIPython.core.display.Image object\u003e"]},"execution_count":44,"metadata":{},"output_type":"execute_result"}],"source":["tf.keras.utils.plot_model(model, rankdir=\"LR\", show_shapes=True)"]},{"cell_type":"code","execution_count":45,"metadata":{"executionInfo":{"elapsed":6,"status":"ok","timestamp":1679966287245,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"G6a1_WtqxUvS"},"outputs":[],"source":["model.compile(\n","    optimizer = tf.keras.optimizers.Adam(),\n","    loss = tf.keras.losses.SparseCategoricalCrossentropy()\n",")"]},{"cell_type":"code","execution_count":46,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":3273,"status":"error","timestamp":1679966290513,"user":{"displayName":"Madhusudhan Reddy","userId":"07612415316378441544"},"user_tz":-330},"id":"uy1Zf3jEw4XT","outputId":"396e5d01-f471-4783-8d31-5f0c7cee99e6"},"outputs":[{"ename":"UnimplementedError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mUnimplementedError\u001b[0m                        Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-46-b116f7af4ef8\u003e\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m\u001b[0m\n\u001b[0;32m----\u003e 1\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mds_batched\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     68\u001b[0m             \u001b[0;31m# To get the full stack trace, call:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m             \u001b[0;31m# `tf.debugging.disable_traceback_filtering()`\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 70\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     71\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     72\u001b[0m             \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     50\u001b[0m   \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     51\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 52\u001b[0;31m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0m\u001b[1;32m     53\u001b[0m                                         inputs, attrs, num_outputs)\n\u001b[1;32m     54\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mUnimplementedError\u001b[0m: Graph execution error:\n\nDetected at node 'sequential_4/Cast' defined at (most recent call last):\n    File \"/usr/lib/python3.9/runpy.py\", line 197, in _run_module_as_main\n      return _run_code(code, main_globals, None,\n    File \"/usr/lib/python3.9/runpy.py\", line 87, in _run_code\n      exec(code, run_globals)\n    File \"/usr/local/lib/python3.9/dist-packages/ipykernel_launcher.py\", line 16, in \u003cmodule\u003e\n      app.launch_new_instance()\n    File \"/usr/local/lib/python3.9/dist-packages/traitlets/config/application.py\", line 992, in launch_instance\n      app.start()\n    File \"/usr/local/lib/python3.9/dist-packages/ipykernel/kernelapp.py\", line 612, in start\n      self.io_loop.start()\n    File \"/usr/local/lib/python3.9/dist-packages/tornado/platform/asyncio.py\", line 215, in start\n      self.asyncio_loop.run_forever()\n    File \"/usr/lib/python3.9/asyncio/base_events.py\", line 601, in run_forever\n      self._run_once()\n    File \"/usr/lib/python3.9/asyncio/base_events.py\", line 1905, in _run_once\n      handle._run()\n    File \"/usr/lib/python3.9/asyncio/events.py\", line 80, in _run\n      self._context.run(self._callback, *self._args)\n    File \"/usr/local/lib/python3.9/dist-packages/tornado/ioloop.py\", line 687, in \u003clambda\u003e\n      lambda f: self._run_callback(functools.partial(callback, future))\n    File \"/usr/local/lib/python3.9/dist-packages/tornado/ioloop.py\", line 740, in _run_callback\n      ret = callback()\n    File \"/usr/local/lib/python3.9/dist-packages/tornado/gen.py\", line 821, in inner\n      self.ctx_run(self.run)\n    File \"/usr/local/lib/python3.9/dist-packages/tornado/gen.py\", line 782, in run\n      yielded = self.gen.send(value)\n    File \"/usr/local/lib/python3.9/dist-packages/ipykernel/kernelbase.py\", line 381, in dispatch_queue\n      yield self.process_one()\n    File \"/usr/local/lib/python3.9/dist-packages/tornado/gen.py\", line 250, in wrapper\n      runner = Runner(ctx_run, result, future, yielded)\n    File \"/usr/local/lib/python3.9/dist-packages/tornado/gen.py\", line 748, in __init__\n      self.ctx_run(self.run)\n    File \"/usr/local/lib/python3.9/dist-packages/tornado/gen.py\", line 782, in run\n      yielded = self.gen.send(value)\n    File \"/usr/local/lib/python3.9/dist-packages/ipykernel/kernelbase.py\", line 365, in process_one\n      yield gen.maybe_future(dispatch(*args))\n    File \"/usr/local/lib/python3.9/dist-packages/tornado/gen.py\", line 234, in wrapper\n      yielded = ctx_run(next, result)\n    File \"/usr/local/lib/python3.9/dist-packages/ipykernel/kernelbase.py\", line 268, in dispatch_shell\n      yield gen.maybe_future(handler(stream, idents, msg))\n    File \"/usr/local/lib/python3.9/dist-packages/tornado/gen.py\", line 234, in wrapper\n      yielded = ctx_run(next, result)\n    File \"/usr/local/lib/python3.9/dist-packages/ipykernel/kernelbase.py\", line 543, in execute_request\n      self.do_execute(\n    File \"/usr/local/lib/python3.9/dist-packages/tornado/gen.py\", line 234, in wrapper\n      yielded = ctx_run(next, result)\n    File \"/usr/local/lib/python3.9/dist-packages/ipykernel/ipkernel.py\", line 306, in do_execute\n      res = shell.run_cell(code, store_history=store_history, silent=silent)\n    File \"/usr/local/lib/python3.9/dist-packages/ipykernel/zmqshell.py\", line 536, in run_cell\n      return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\n    File \"/usr/local/lib/python3.9/dist-packages/IPython/core/interactiveshell.py\", line 2854, in run_cell\n      result = self._run_cell(\n    File \"/usr/local/lib/python3.9/dist-packages/IPython/core/interactiveshell.py\", line 2881, in _run_cell\n      return runner(coro)\n    File \"/usr/local/lib/python3.9/dist-packages/IPython/core/async_helpers.py\", line 68, in _pseudo_sync_runner\n      coro.send(None)\n    File \"/usr/local/lib/python3.9/dist-packages/IPython/core/interactiveshell.py\", line 3057, in run_cell_async\n      has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\n    File \"/usr/local/lib/python3.9/dist-packages/IPython/core/interactiveshell.py\", line 3249, in run_ast_nodes\n      if (await self.run_code(code, result,  async_=asy)):\n    File \"/usr/local/lib/python3.9/dist-packages/IPython/core/interactiveshell.py\", line 3326, in run_code\n      exec(code_obj, self.user_global_ns, self.user_ns)\n    File \"\u003cipython-input-46-b116f7af4ef8\u003e\", line 1, in \u003cmodule\u003e\n      model.fit(ds_batched, epochs=1)\n    File \"/usr/local/lib/python3.9/dist-packages/keras/utils/traceback_utils.py\", line 65, in error_handler\n      return fn(*args, **kwargs)\n    File \"/usr/local/lib/python3.9/dist-packages/keras/engine/training.py\", line 1650, in fit\n      tmp_logs = self.train_function(iterator)\n    File \"/usr/local/lib/python3.9/dist-packages/keras/engine/training.py\", line 1249, in train_function\n      return step_function(self, iterator)\n    File \"/usr/local/lib/python3.9/dist-packages/keras/engine/training.py\", line 1233, in step_function\n      outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"/usr/local/lib/python3.9/dist-packages/keras/engine/training.py\", line 1222, in run_step\n      outputs = model.train_step(data)\n    File \"/usr/local/lib/python3.9/dist-packages/keras/engine/training.py\", line 1023, in train_step\n      y_pred = self(x, training=True)\n    File \"/usr/local/lib/python3.9/dist-packages/keras/utils/traceback_utils.py\", line 65, in error_handler\n      return fn(*args, **kwargs)\n    File \"/usr/local/lib/python3.9/dist-packages/keras/engine/training.py\", line 561, in __call__\n      return super().__call__(*args, **kwargs)\n    File \"/usr/local/lib/python3.9/dist-packages/keras/utils/traceback_utils.py\", line 65, in error_handler\n      return fn(*args, **kwargs)\n    File \"/usr/local/lib/python3.9/dist-packages/keras/engine/base_layer.py\", line 1132, in __call__\n      outputs = call_fn(inputs, *args, **kwargs)\n    File \"/usr/local/lib/python3.9/dist-packages/keras/utils/traceback_utils.py\", line 96, in error_handler\n      return fn(*args, **kwargs)\n    File \"/usr/local/lib/python3.9/dist-packages/keras/engine/sequential.py\", line 413, in call\n      return super().call(inputs, training=training, mask=mask)\n    File \"/usr/local/lib/python3.9/dist-packages/keras/engine/functional.py\", line 511, in call\n      return self._run_internal_graph(inputs, training=training, mask=mask)\n    File \"/usr/local/lib/python3.9/dist-packages/keras/engine/functional.py\", line 650, in _run_internal_graph\n      y = self._conform_to_reference_input(y, ref_input=x)\n    File \"/usr/local/lib/python3.9/dist-packages/keras/engine/functional.py\", line 762, in _conform_to_reference_input\n      tensor = tf.cast(tensor, dtype=ref_input.dtype)\nNode: 'sequential_4/Cast'\nCast string to float is not supported\n\t [[{{node sequential_4/Cast}}]] [Op:__inference_train_function_15311]"]}],"source":["model.fit(ds_batched, epochs=1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mTwLCY3txQvT"},"outputs":[],"source":[]}],"metadata":{"colab":{"authorship_tag":"ABX9TyNiBBghWItirnzwcGWLcCD1","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}